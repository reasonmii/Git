※ Git Diff Docs
https://git-scm.com/docs/git-diff

We can use the git diff command to "view changes"
between commits, branches, files, our working directory, and more!

※ unstaged : before 'git add' command
※ staged   : after 'git add' command

★ Visualize Diffs with GUIs 'Git Kraken'
- Click any stage you want
- Click the files in 'view changes' part on the right
- It will show you what changed
- If the script is too long, you can click 'Hunk View' to see only the part changed

------------------------------------------------------------------------------------------

$ cd desktop
$ mkdir color
$ cd color
$ git status
$ git init
result : Initialized empty Git repository in C:/Users/User/Desktop/color/.git/

$ touch colors.txt
$ git add colors.txt
$ git commit -m "initial commit"
$ git commit -am "add red"
$ git commit -am "add orange"
$ git commit -am "add yellow and green"
$ git commit -am "add blue and purple"
$ git log --oneline
result : 33bbaa3 (HEAD -> master) add blue and purple
         21633f9 add yellow and green
         df00d3b add orange
         e6a1977 add red
         2a0068a initial commit

● colors.txt
red
orange
yellow
green
blue
purple

------------------------------------------------------------------------------------------

▶ Git Diff : Unstaged changes
"git diff" lists all the changes in our working directory
that are "NOT staged" for the next commit

$ git diff
result : nothing

● Edit 'colors.txt' file
Remove 'purple', write 'indigo'

$ git status
result : On branch master
         Changes not staged for commit:
           (use "git add <file>..." to update what will be committed)
           (use "git restore <file>..." to discard changes in working directory)
                 modified:   colors.txt
         no changes added to commit (use "git add" and/or "git commit -a")

$ git diff
result : diff --git a/colors.txt b/colors.txt
         index 16c4f5d..b6f76a0 100644
         --- a/colors.txt
         +++ b/colors.txt
         @@ -3,4 +3,4 @@ orange
          yellow
          green
          blue
         -purple
         +indigo

a : previous file -> '-' sign
b : changed file  -> '+' sign

------------------------------------------------------------------------------------------

▶ Git Diff HEAD : Unstaged + Staged changes
"git diff HEAD" lists "all changes" in the working tree since your last commit

$ git diff HEAD
result : diff --git a/colors.txt b/colors.txt
         index 16c4f5d..b6f76a0 100644
         --- a/colors.txt
         +++ b/colors.txt
         @@ -3,4 +3,4 @@ orange
          yellow
          green
          blue
         -purple
         +indigo

● Edit 'colors.txt' file
$ git add colors.txt

$ git diff
result : nothing
-> because there's no unstaged change

$ git diff HEAD
result : diff --git a/colors.txt b/colors.txt
         index 16c4f5d..b6f76a0 100644
         --- a/colors.txt
         +++ b/colors.txt
         @@ -3,4 +3,4 @@ orange
          yellow
          green
          blue
         -purple
         +indigo
-> result : staged change of file 'colors.txt'

$ git commit -m "add indigo"

● Create 'numbers.txt' file
$ touch numbers.txt
$ git add numbers.txt
$ git diff
result : nothing

$ git diff HEAD
result : diff --git a/numbers.txt b/numbers.txt
         new file mode 100644
         index 0000000..43dd47e
         --- /dev/null
         +++ b/numbers.txt
         @@ -0,0 +1 @@
         +one
         \ No newline at end of file

※ '/dev/null' means there's nothing to compare before having the file 'numbers.txt'

● Edit 'colors.txt' file
$ git diff
result : diff --git a/colors.txt b/colors.txt
         index b6f76a0..5ac6fae 100644
         --- a/colors.txt
         +++ b/colors.txt
         @@ -4,3 +4,4 @@ yellow
          green
          blue
          indigo
         +violet
         \ No newline at end of file
-> result : unstaged change of file 'colors.txt'

$ git diff HEAD
result : diff --git a/colors.txt b/colors.txt
         index b6f76a0..5ac6fae 100644
         --- a/colors.txt
         +++ b/colors.txt
         @@ -4,3 +4,4 @@ yellow
          green
          blue
          indigo
         +violet
         \ No newline at end of file
         diff --git a/numbers.txt b/numbers.txt
         new file mode 100644
         index 0000000..43dd47e
         --- /dev/null
         +++ b/numbers.txt
         @@ -0,0 +1 @@
         +one
         \ No newline at end of file
-> result : unstaged change of file 'colors.txt'
          + staged change of file 'numbers.txt'

------------------------------------------------------------------------------------------

▶ Git Diff --staged/cached : Staged changes
"git diff --staged" or "--cached" will list the changes
between the staging area and our last commit

1) git diff --staged
2) git diff --cached

$ git status
result : On branch master
         Changes to be committed:
           (use "git restore --staged <file>..." to unstage)
                 new file:   numbers.txt

         Changes not staged for commit:
           (use "git add <file>..." to update what will be committed)
           (use "git restore <file>..." to discard changes in working directory)
                 modified:   colors.txt

$ git diff --staged
result : diff --git a/numbers.txt b/numbers.txt
         new file mode 100644
         index 0000000..43dd47e
         --- /dev/null
         +++ b/numbers.txt
         @@ -0,0 +1 @@
         +one
         \ No newline at end of file

$ git diff
result : diff --git a/colors.txt b/colors.txt
         index b6f76a0..5ac6fae 100644
         --- a/colors.txt
         +++ b/colors.txt
         @@ -4,3 +4,4 @@ yellow
          green
          blue
          indigo
         +violet
         \ No newline at end of file

$ git diff HEAD
result : diff --git a/colors.txt b/colors.txt
         index b6f76a0..5ac6fae 100644
         --- a/colors.txt
         +++ b/colors.txt
         @@ -4,3 +4,4 @@ yellow
          green
          blue
          indigo
         +violet
         \ No newline at end of file
         diff --git a/numbers.txt b/numbers.txt
         new file mode 100644
         index 0000000..43dd47e
         --- /dev/null
         +++ b/numbers.txt
         @@ -0,0 +1 @@
         +one
         \ No newline at end of file

$ git add colors.txt
$ git diff --staged
result : diff --git a/colors.txt b/colors.txt
         index b6f76a0..5ac6fae 100644
         --- a/colors.txt
         +++ b/colors.txt
         @@ -4,3 +4,4 @@ yellow
          green
          blue
          indigo
         +violet
         \ No newline at end of file
         diff --git a/numbers.txt b/numbers.txt
         new file mode 100644
         index 0000000..43dd47e
         --- /dev/null
         +++ b/numbers.txt
         @@ -0,0 +1 @@
         +one
         \ No newline at end of file

------------------------------------------------------------------------------------------

▶ Diff-ing Specific Files
We can view the changes within a specific file by providing git diff with a filename
- git diff <fileName>
- git diff <fileName1> <fileName2>
- git diff <folderName>/<fileName1> <fileName2>
- git diff HEAD <folderName>/<fileName>
- git diff HEAD <fileName>
- git diff --staged <fileName>
- git diff --cached <fileName>

$ git diff --staged numbers.txt
result : diff --git a/numbers.txt b/numbers.txt
         new file mode 100644
         index 0000000..43dd47e
         --- /dev/null
         +++ b/numbers.txt
         @@ -0,0 +1 @@
         +one
         \ No newline at end of file

------------------------------------------------------------------------------------------

▶ Comparing Branches
"git diff branch1..branch2" will list the changes
between the tips of branch1 and branch2

★ Their order does matter
1) git diff branch1..branch2
2) git diff branch1 branch2

$ git commit -m "add violet and create numbers.txt"

● Edit 'numbers.txt' file
$ git commit -am "add more numbers"

● Create new branch 'odd-numbers'
$ git switch -c odd-numbers
$ git commit -am "remove two and four"
$ git commit -am "add FIVE"

● Compare branches
$ git branch
result :   master
         * odd-numbers

$ git diff master..odd-numbers
result : diff --git a/numbers.txt b/numbers.txt
         index 0af2ee8..84b14e7 100644
         --- a/numbers.txt
         +++ b/numbers.txt
         @@ -1,4 +1,3 @@
          one
         -TWO
          THREE
         -FOUR
         \ No newline at end of file
         +FIVE
         \ No newline at end of file

$ git diff odd-numbers..master
result : diff --git a/numbers.txt b/numbers.txt
         index 84b14e7..0af2ee8 100644
         --- a/numbers.txt
         +++ b/numbers.txt
         @@ -1,3 +1,4 @@
          one
         +TWO
          THREE
         -FIVE
         \ No newline at end of file
         +FOUR
         \ No newline at end of file

------------------------------------------------------------------------------------------

▶ Comparing Commits
To compare two commits, provide git diff
with the "commit hashes" of the commits in question

★ Their order does matter
1) git diff commit1..commit2
2) git diff commit1 commit2

● Check commit hashes
$ git switch master
$ git log --oneline
result : 486f761 (HEAD -> master) add more numbers
         262d3f0 add violet and create numbers.txt
         f7e88bf add indigo
         33bbaa3 add blue and purple
         21633f9 add yellow and green
         df00d3b add orange
         e6a1977 add red
         2a0068a initial commit


$ git diff f7e88bf..e6a1977
result : diff --git a/colors.txt b/colors.txt
         index b6f76a0..46f29e8 100644
         --- a/colors.txt
         +++ b/colors.txt
         @@ -1,6 +1 @@
         -red
         -orange
         -yellow
         -green
         -blue
         -indigo
         +red
         \ No newline at end of file

$ git diff e6a1977..2a0068a
result : diff --git a/colors.txt b/colors.txt
         index 46f29e8..e69de29 100644
         --- a/colors.txt
         +++ b/colors.txt
         @@ -1 +0,0 @@
         -red
         \ No newline at end of file

------------------------------------------------------------------------------------------

▶ Merging Basics Exercise
※ https://www.notion.so/Git-Diff-Exercise-f7829bd2783940cea14239022a6c37a9


$ cd desktop

● Download 'git-diff-exercise' folder from github
$ git clone https://github.com/Colt/git-diff-exercise
result : Cloning into 'git-diff-exercise'...
         remote: Enumerating objects: 15, done.
         remote: Counting objects: 100% (15/15), done.
         remote: Compressing objects: 100% (13/13), done.
         remote: Total 15 (delta 1), reused 15 (delta 1), pack-reused 0
         Receiving objects: 100% (15/15), done.
         Resolving deltas: 100% (1/1), done.

● Check the folder
$ cd git-diff-exercise
$ ls
result : fleetwoodmac.txt  queen.txt
$ code .

$ git branch
* current

$ git switch 1970s
$ git branch
* 1970s
  current

● Compare the difference between the `1970s` branch
  and the `current` branch across all files

$ git diff 1970s..current
result : diff --git a/fleetwoodmac.txt b/fleetwoodmac.txt
         index 6f44367..653b184 100644
         --- a/fleetwoodmac.txt
         +++ b/fleetwoodmac.txt
         @@ -1,5 +1,5 @@
         -Lead Vocals: Jeremy Spencer
         -Lead Guitar: Lindsey Buckingham
         +Lead Vocals: Stevie Nicks
         +Lead Guitar: Mike Campbell
          Bass: John McVie
          Drums: Mick Fleetwood
         -Keyboard: None
         \ No newline at end of file
         +Keyboard: Christine McVie
         \ No newline at end of file
         diff --git a/queen.txt b/queen.txt
         index 2ab2d04..0e0fa0d 100644
         --- a/queen.txt
         +++ b/queen.txt
         @@ -1,4 +1,4 @@
         -Lead Vocals: Freddie Mercury
         +Lead Vocals: Adam Lambert
          Lead Guitar: Brian May

● Compare the difference between the `1970s` branch
  and the `current` branch but only for the "queen.txt" file

$ git diff 1970s current queen.txt
result : diff --git a/queen.txt b/queen.txt
         index 2ab2d04..0e0fa0d 100644
         --- a/queen.txt
         +++ b/queen.txt
         @@ -1,4 +1,4 @@
         -Lead Vocals: Freddie Mercury
         +Lead Vocals: Adam Lambert
          Lead Guitar: Brian May
         -Bass: Mike Grose
         +Bass: Neil Fairclough
          Drums: Roger Taylor
        \ No newline at end of file

● Switch over to the `current` branch if you are not currently on it
  Run a diff to compare the current HEAD to the previous commit
  (you could use the commit hash or reference HEAD's parent commit)

★ HEAD~1 : the parent commit of head

$ git switch current

Method1)
$ git diff HEAD HEAD~1
result : diff --git a/queen.txt b/queen.txt
         index 0e0fa0d..f7f4a33 100644
         --- a/queen.txt
         +++ b/queen.txt
         @@ -1,4 +1,4 @@
          Lead Vocals: Adam Lambert
          Lead Guitar: Brian May
         -Bass: Neil Fairclough
         +Bass: John Deacon
          Drums: Roger Taylor
        \ No newline at end of file

Method2)
$ git diff HEAD~1
result : diff --git a/queen.txt b/queen.txt
         index f7f4a33..0e0fa0d 100644
         --- a/queen.txt
         +++ b/queen.txt
         @@ -1,4 +1,4 @@
          Lead Vocals: Adam Lambert
          Lead Guitar: Brian May
         -Bass: John Deacon
         +Bass: Neil Fairclough
          Drums: Roger Taylor
         \ No newline at end of file

Method3)
$ git log --oneline
result : 09cbcc9 (HEAD -> current, origin/current, origin/HEAD) replace John Deacon as Queen's bassist
         15db960 add current queen lineup
         411c922 add current fleetwood mac lineup
         247e203 (origin/1970s, 1970s) add early 1970s fleetwood mac lineup
         f31a79f add 1970 queen lineup
-> Copy the previous commit '15db960'

$ git diff 15db960
result : diff --git a/queen.txt b/queen.txt
         index f7f4a33..0e0fa0d 100644
         --- a/queen.txt
         +++ b/queen.txt
         @@ -1,4 +1,4 @@
          Lead Vocals: Adam Lambert
          Lead Guitar: Brian May
         -Bass: John Deacon
         +Bass: Neil Fairclough
          Drums: Roger Taylor
         \ No newline at end of file

● While on the `current` branch, change the `queen.txt` file
  by replacing Adam Lambert with your own name. Save the change.
  Add `queen.txt` to the staging area.  DO NOT COMMIT YET!

$ git add queen.txt
$ git status
result : On branch current
         Your branch is up to date with 'origin/current'.
         
         Changes to be committed:
           (use "git restore --staged <file>..." to unstage)
                 modified:   queen.txt

● Edit the `fleetwoodmac.txt` file, changing the lead singer
  from Stevie Nicks to Stevie Chicks (one of my chickens).
  Save the file, but do not stage it.

$ git status
result : On branch current
         Your branch is up to date with 'origin/current'.

         Changes to be committed:
           (use "git restore --staged <file>..." to unstage)
                 modified:   queen.txt

         Changes not staged for commit:
           (use "git add <file>..." to update what will be committed)
           (use "git restore <file>..." to discard changes in working directory)
                 modified:   fleetwoodmac.txt

● Run a diff that would reveal the "unstaged" changes in the working directory
  (you should see only the change to `fleetwoodmac.txt` printed out)

$ git diff
result : diff --git a/fleetwoodmac.txt b/fleetwoodmac.txt
         index 653b184..8c384c0 100644
         --- a/fleetwoodmac.txt
         +++ b/fleetwoodmac.txt
         @@ -1,4 +1,4 @@
         -Lead Vocals: Stevie Nicks
         +Lead Vocals: Stevie Chicks
          Lead Guitar: Mike Campbell
          Bass: John McVie
          Drums: Mick Fleetwood

● Run a diff that would reveal only the "staged" changes
  (you should only see the change to `queen.txt` printed out)

$ git diff --staged
result : diff --git a/queen.txt b/queen.txt
         index 0e0fa0d..5dbd9fa 100644
         --- a/queen.txt
         +++ b/queen.txt
         @@ -1,4 +1,4 @@
         -Lead Vocals: Adam Lambert
         +Lead Vocals: reasonmii
          Lead Guitar: Brian May
          Bass: Neil Fairclough
          Drums: Roger Taylor
         \ No newline at end of file

● Run a diff that prints all changes (staged and unstaged)
  since the prior commit (you should see both changes printed out)

$ git diff HEAD
result : diff --git a/fleetwoodmac.txt b/fleetwoodmac.txt
         index 653b184..8c384c0 100644
         --- a/fleetwoodmac.txt
         +++ b/fleetwoodmac.txt
         @@ -1,4 +1,4 @@
         -Lead Vocals: Stevie Nicks
         +Lead Vocals: Stevie Chicks
          Lead Guitar: Mike Campbell
          Bass: John McVie
          Drums: Mick Fleetwood
         diff --git a/queen.txt b/queen.txt
         index 0e0fa0d..5dbd9fa 100644
         --- a/queen.txt
         +++ b/queen.txt
         @@ -1,4 +1,4 @@
         -Lead Vocals: Adam Lambert
         +Lead Vocals: reasonmii
          Lead Guitar: Brian May
          Bass: Neil Fairclough
          Drums: Roger Taylor
         \ No newline at end of file

